[buildout]
robot_tests_folder =
sphinx_extras =
versions = versions


[grunt-release]
recipe = plone.recipe.command
command = cd ${buildout:directory}; grunt release
update-command = cd ${buildout:directory}; grunt release


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude


[npm-install]
recipe = plone.recipe.command
command = cd ${buildout:directory}; npm install .


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[rebuild_docs-sh]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    cd docs/build
    rm -rf doctrees
    rm -rf html
    make html
    cd ../..
output = ${buildout:directory}/bin/rebuild_docs.sh
mode = 755


[rebuild_i18n-sh]
recipe = collective.recipe.template
output = ${buildout:directory}/bin/rebuild_i18n.sh
mode = 755
input = inline:
    #! /bin/sh
    # see http://maurits.vanrees.org/weblog/archive/2010/10/i18n-plone-4 for more information

    I18NDOMAIN="${buildout:package-name}"

    # find the locales dir
    LOCALES=`find . -type d | grep "${buildout:package-name}" | grep -m 1 "locales"`
    SOURCE=`dirname $LOCALES`;

    # rebuild pot file for package's domain and merge it with any manual translations needed
    bin/i18ndude rebuild-pot --pot $LOCALES/$I18NDOMAIN.pot --create $I18NDOMAIN $SOURCE
    bin/i18ndude merge --pot $LOCALES/$I18NDOMAIN.pot --merge $LOCALES/manual.pot

    # synchronise translations for package's domain
    for po in $LOCALES/*/LC_MESSAGES/$I18NDOMAIN.po; do
        bin/i18ndude sync --pot $LOCALES/$I18NDOMAIN.pot $po
    done

    # rebuild pot file for Plone's domain
    bin/i18ndude rebuild-pot --pot $LOCALES/plone.pot --create plone $SOURCE/configure.zcml $SOURCE/profiles/default

    # synchronise translations for Plone's domain
    for po in $LOCALES/*/LC_MESSAGES/plone.po; do
        bin/i18ndude sync --pot $LOCALES/plone.pot $po
    done


[releaser]
recipe = zc.recipe.egg:scripts
dependent-scripts = true
eggs =
    zest.releaser[recommended]
    ps.releaser
    ${buildout:package-name}


[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework [reload]


[sphinxbuilder]
recipe = collective.recipe.sphinxbuilder
eggs =
    ${instance:eggs}
    sphinx_rtd_theme
    ${buildout:sphinx_extras}
source = ${buildout:directory}/docs/source
build = ${buildout:directory}/docs/build


[testnorobot]
<= test
initialization = os.environ['NO_ROBOT'] = '1'


[updatedocsimages]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework
scripts = pybot=updatedocsimages
initialization =
    import sys
    sys.argv.extend(['-d', '${buildout:directory}/docs/_images', '-r', 'NONE', '-l', 'NONE', '-o', 'NONE', '${buildout:robot_tests_folder}/test_*.robot'])


[versions]
Sphinx = 1.5.5
collective.recipe.sphinxbuilder = 0.8.2
docutils = 0.13.1
flake8 = 2.5.2
flake8-coding = 1.2.2
flake8-deprecated = 1.0
flake8-pep3101 = 0.6
flake8-quotes = 0.1.2
mr.developer =
pkginfo = 1.3.2
pygments = 2.1.3
pyroma = 2.1
readme-renderer = 17.2
robotframework-selenium2screenshots = 0.6
setuptools =
sphinx-rtd-theme = 0.1.9
zc.buildout =
zest.releaser = 6.10


[zptlint]
recipe = zc.recipe.egg
eggs = zptlint
